Go - An Introduction
TEx-03
14:00 14 Feb 2019
Tags: go, golang, intro

Herbert MÃ¼hlburger & Rene Weselowski
BearingPoint Technology GmbH

* Go Gopher

.image img/gopher.png 300 _

.caption By [[https://gopherize.me][Gopherize.me]]

* Notes

The slides are available on [[http://talks.godoc.org/github.com/muehlburger/talks/TEx-03/intro-to-go.slide]]

Most of the code examples won't run except locally.

The playground runs Go 1.8.

* Agenda

- Why Go?
- The Language
- The Standard Library
- The Tooling
- Go Microservice Simpler Microservice Use Case

* Hello World

.play code/hello/hello-world.go /^package/,/^}/

.link https://gobyexample.com Go by Example

* Simple HTTP GET Request

.play code/http/http-get.go /^package/,/^}/

* Why Go?

- efficient compilation
  - Go creates compiled programs
  - there is a garbage collector (GC)
  - there is no virtual machine
- efficient execution
- ease of programming

* Concurrency in Go

CSP by C.A.R. Hoare as foundation.

.image img/csp.png _ 400
.caption [[http://cs2.ist.unomaha.edu/~stanw/papers/p666-hoare.pdf][Communicating Sequencial Processes]]

* Channels

- Unbuffered Channels
- Buffered Channels

* Tooling

- gofmt
- goimport
- go run
- go build
- GOOS=windows go build
- GOOS=linux go build
- go install
- go get
- go list

go list -f '{{ join .Imports "\n"}}'
